// <auto-generated />
using Illion0.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Illion0.Migrations
{
    [DbContext(typeof(IllionDBContext))]
    partial class IllionDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Illion0.Entities.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("AccountsTaxPayerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("accountHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountHolderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("available")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("balance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bsb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interestRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("AccountsTaxPayerId");

                    b.ToTable("CustomerAccount");
                });

            modelBuilder.Entity("Illion0.Entities.Accounts", b =>
                {
                    b.Property<string>("TaxPayerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dataRequestLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("referral_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxPayerId");

                    b.ToTable("CustomerAccounts");
                });

            modelBuilder.Entity("Illion0.Entities.Account", b =>
                {
                    b.HasOne("Illion0.Entities.Accounts", null)
                        .WithMany("accounts")
                        .HasForeignKey("AccountsTaxPayerId");
                });

            modelBuilder.Entity("Illion0.Entities.Accounts", b =>
                {
                    b.Navigation("accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
